{"dependencies":[{"name":"C:\\Users\\Kayode\\projects\\sp-grp-mem-pnp\\package.json","includedInParent":true,"mtime":1523564962068},{"name":"C:\\Users\\Kayode\\projects\\node_modules\\sp-pnp-js\\package.json","includedInParent":true,"mtime":1523563707687},{"name":"../odata/caching","loc":{"line":9,"column":24}},{"name":"../utils/logging","loc":{"line":10,"column":24}},{"name":"../utils/util","loc":{"line":11,"column":21}}],"generated":{"js":"\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar caching_1 = require(\"../odata/caching\");\nvar logging_1 = require(\"../utils/logging\");\nvar util_1 = require(\"../utils/util\");\n/**\n * Resolves the context's result value\n *\n * @param context The current context\n */\nfunction returnResult(context) {\n    logging_1.Logger.log({\n        data: context.result,\n        level: logging_1.LogLevel.Verbose,\n        message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Returning result, see data property for value.\",\n    });\n    return Promise.resolve(context.result);\n}\n/**\n * Sets the result on the context\n */\nfunction setResult(context, value) {\n    return new Promise(function (resolve) {\n        context.result = value;\n        context.hasResult = true;\n        resolve(context);\n    });\n}\nexports.setResult = setResult;\n/**\n * Invokes the next method in the provided context's pipeline\n *\n * @param c The current request context\n */\nfunction next(c) {\n    if (c.pipeline.length < 1) {\n        return Promise.resolve(c);\n    }\n    return c.pipeline.shift()(c);\n}\n/**\n * Executes the current request context's pipeline\n *\n * @param context Current context\n */\nfunction pipe(context) {\n    return next(context)\n        .then(function (ctx) { return returnResult(ctx); })\n        .catch(function (e) {\n        logging_1.Logger.log({\n            data: e,\n            level: logging_1.LogLevel.Error,\n            message: \"Error in request pipeline: \" + e.message,\n        });\n        throw e;\n    });\n}\nexports.pipe = pipe;\n/**\n * decorator factory applied to methods in the pipeline to control behavior\n */\nfunction requestPipelineMethod(alwaysRun) {\n    if (alwaysRun === void 0) { alwaysRun = false; }\n    return function (target, propertyKey, descriptor) {\n        var method = descriptor.value;\n        descriptor.value = function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            // if we have a result already in the pipeline, pass it along and don't call the tagged method\n            if (!alwaysRun && args.length > 0 && args[0].hasOwnProperty(\"hasResult\") && args[0].hasResult) {\n                logging_1.Logger.write(\"[\" + args[0].requestId + \"] (\" + (new Date()).getTime() + \") Skipping request pipeline method \" + propertyKey + \", existing result in pipeline.\", logging_1.LogLevel.Verbose);\n                return Promise.resolve(args[0]);\n            }\n            // apply the tagged method\n            logging_1.Logger.write(\"[\" + args[0].requestId + \"] (\" + (new Date()).getTime() + \") Calling request pipeline method \" + propertyKey + \".\", logging_1.LogLevel.Verbose);\n            // then chain the next method in the context's pipeline - allows for dynamic pipeline\n            return method.apply(target, args).then(function (ctx) { return next(ctx); });\n        };\n    };\n}\nexports.requestPipelineMethod = requestPipelineMethod;\n/**\n * Contains the methods used within the request pipeline\n */\nvar PipelineMethods = /** @class */ (function () {\n    function PipelineMethods() {\n    }\n    /**\n     * Logs the start of the request\n     */\n    PipelineMethods.logStart = function (context) {\n        return new Promise(function (resolve) {\n            logging_1.Logger.log({\n                data: logging_1.Logger.activeLogLevel === logging_1.LogLevel.Info ? {} : context,\n                level: logging_1.LogLevel.Info,\n                message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Beginning \" + context.verb + \" request (\" + context.requestAbsoluteUrl + \")\",\n            });\n            resolve(context);\n        });\n    };\n    /**\n     * Handles caching of the request\n     */\n    PipelineMethods.caching = function (context) {\n        return new Promise(function (resolve) {\n            // handle caching, if applicable\n            if (context.verb === \"GET\" && context.isCached) {\n                logging_1.Logger.write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Caching is enabled for request, checking cache...\", logging_1.LogLevel.Info);\n                var cacheOptions = new caching_1.CachingOptions(context.requestAbsoluteUrl.toLowerCase());\n                if (typeof context.cachingOptions !== \"undefined\") {\n                    cacheOptions = util_1.Util.extend(cacheOptions, context.cachingOptions);\n                }\n                // we may not have a valid store\n                if (cacheOptions.store !== null) {\n                    // check if we have the data in cache and if so resolve the promise and return\n                    var data = cacheOptions.store.get(cacheOptions.key);\n                    if (data !== null) {\n                        // ensure we clear any help batch dependency we are resolving from the cache\n                        logging_1.Logger.log({\n                            data: logging_1.Logger.activeLogLevel === logging_1.LogLevel.Info ? {} : data,\n                            level: logging_1.LogLevel.Info,\n                            message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Value returned from cache.\",\n                        });\n                        context.batchDependency();\n                        // handle the case where a parser needs to take special actions with a cached result (such as getAs)\n                        if (context.parser.hasOwnProperty(\"hydrate\")) {\n                            data = context.parser.hydrate(data);\n                        }\n                        return setResult(context, data).then(function (ctx) { return resolve(ctx); });\n                    }\n                }\n                logging_1.Logger.write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Value not found in cache.\", logging_1.LogLevel.Info);\n                // if we don't then wrap the supplied parser in the caching parser wrapper\n                // and send things on their way\n                context.parser = new caching_1.CachingParserWrapper(context.parser, cacheOptions);\n            }\n            return resolve(context);\n        });\n    };\n    /**\n     * Sends the request\n     */\n    PipelineMethods.send = function (context) {\n        return new Promise(function (resolve, reject) {\n            // send or batch the request\n            if (context.isBatched) {\n                // we are in a batch, so add to batch, remove dependency, and resolve with the batch's promise\n                var p = context.batch.add(context.requestAbsoluteUrl, context.verb, context.options, context.parser);\n                // we release the dependency here to ensure the batch does not execute until the request is added to the batch\n                context.batchDependency();\n                logging_1.Logger.write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Batching request in batch \" + context.batch.batchId + \".\", logging_1.LogLevel.Info);\n                // we set the result as the promise which will be resolved by the batch's execution\n                resolve(setResult(context, p));\n            }\n            else {\n                logging_1.Logger.write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Sending request.\", logging_1.LogLevel.Info);\n                // we are not part of a batch, so proceed as normal\n                var client = context.clientFactory();\n                var opts = util_1.Util.extend(context.options || {}, { method: context.verb });\n                client.fetch(context.requestAbsoluteUrl, opts)\n                    .then(function (response) { return context.parser.parse(response); })\n                    .then(function (result) { return setResult(context, result); })\n                    .then(function (ctx) { return resolve(ctx); })\n                    .catch(function (e) { return reject(e); });\n            }\n        });\n    };\n    /**\n     * Logs the end of the request\n     */\n    PipelineMethods.logEnd = function (context) {\n        return new Promise(function (resolve) {\n            if (context.isBatched) {\n                logging_1.Logger.log({\n                    data: logging_1.Logger.activeLogLevel === logging_1.LogLevel.Info ? {} : context,\n                    level: logging_1.LogLevel.Info,\n                    message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") \" + context.verb + \" request will complete in batch \" + context.batch.batchId + \".\",\n                });\n            }\n            else {\n                logging_1.Logger.log({\n                    data: logging_1.Logger.activeLogLevel === logging_1.LogLevel.Info ? {} : context,\n                    level: logging_1.LogLevel.Info,\n                    message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Completing \" + context.verb + \" request.\",\n                });\n            }\n            resolve(context);\n        });\n    };\n    Object.defineProperty(PipelineMethods, \"default\", {\n        get: function () {\n            return [\n                PipelineMethods.logStart,\n                PipelineMethods.caching,\n                PipelineMethods.send,\n                PipelineMethods.logEnd,\n            ];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    __decorate([\n        requestPipelineMethod(true)\n    ], PipelineMethods, \"logStart\", null);\n    __decorate([\n        requestPipelineMethod()\n    ], PipelineMethods, \"caching\", null);\n    __decorate([\n        requestPipelineMethod()\n    ], PipelineMethods, \"send\", null);\n    __decorate([\n        requestPipelineMethod(true)\n    ], PipelineMethods, \"logEnd\", null);\n    return PipelineMethods;\n}());\nexports.PipelineMethods = PipelineMethods;\n","map":{"mappings":[{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}}],"sources":{"..\\node_modules\\sp-pnp-js\\lib\\request\\pipeline.js":"\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar caching_1 = require(\"../odata/caching\");\nvar logging_1 = require(\"../utils/logging\");\nvar util_1 = require(\"../utils/util\");\n/**\n * Resolves the context's result value\n *\n * @param context The current context\n */\nfunction returnResult(context) {\n    logging_1.Logger.log({\n        data: context.result,\n        level: logging_1.LogLevel.Verbose,\n        message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Returning result, see data property for value.\",\n    });\n    return Promise.resolve(context.result);\n}\n/**\n * Sets the result on the context\n */\nfunction setResult(context, value) {\n    return new Promise(function (resolve) {\n        context.result = value;\n        context.hasResult = true;\n        resolve(context);\n    });\n}\nexports.setResult = setResult;\n/**\n * Invokes the next method in the provided context's pipeline\n *\n * @param c The current request context\n */\nfunction next(c) {\n    if (c.pipeline.length < 1) {\n        return Promise.resolve(c);\n    }\n    return c.pipeline.shift()(c);\n}\n/**\n * Executes the current request context's pipeline\n *\n * @param context Current context\n */\nfunction pipe(context) {\n    return next(context)\n        .then(function (ctx) { return returnResult(ctx); })\n        .catch(function (e) {\n        logging_1.Logger.log({\n            data: e,\n            level: logging_1.LogLevel.Error,\n            message: \"Error in request pipeline: \" + e.message,\n        });\n        throw e;\n    });\n}\nexports.pipe = pipe;\n/**\n * decorator factory applied to methods in the pipeline to control behavior\n */\nfunction requestPipelineMethod(alwaysRun) {\n    if (alwaysRun === void 0) { alwaysRun = false; }\n    return function (target, propertyKey, descriptor) {\n        var method = descriptor.value;\n        descriptor.value = function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            // if we have a result already in the pipeline, pass it along and don't call the tagged method\n            if (!alwaysRun && args.length > 0 && args[0].hasOwnProperty(\"hasResult\") && args[0].hasResult) {\n                logging_1.Logger.write(\"[\" + args[0].requestId + \"] (\" + (new Date()).getTime() + \") Skipping request pipeline method \" + propertyKey + \", existing result in pipeline.\", logging_1.LogLevel.Verbose);\n                return Promise.resolve(args[0]);\n            }\n            // apply the tagged method\n            logging_1.Logger.write(\"[\" + args[0].requestId + \"] (\" + (new Date()).getTime() + \") Calling request pipeline method \" + propertyKey + \".\", logging_1.LogLevel.Verbose);\n            // then chain the next method in the context's pipeline - allows for dynamic pipeline\n            return method.apply(target, args).then(function (ctx) { return next(ctx); });\n        };\n    };\n}\nexports.requestPipelineMethod = requestPipelineMethod;\n/**\n * Contains the methods used within the request pipeline\n */\nvar PipelineMethods = /** @class */ (function () {\n    function PipelineMethods() {\n    }\n    /**\n     * Logs the start of the request\n     */\n    PipelineMethods.logStart = function (context) {\n        return new Promise(function (resolve) {\n            logging_1.Logger.log({\n                data: logging_1.Logger.activeLogLevel === logging_1.LogLevel.Info ? {} : context,\n                level: logging_1.LogLevel.Info,\n                message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Beginning \" + context.verb + \" request (\" + context.requestAbsoluteUrl + \")\",\n            });\n            resolve(context);\n        });\n    };\n    /**\n     * Handles caching of the request\n     */\n    PipelineMethods.caching = function (context) {\n        return new Promise(function (resolve) {\n            // handle caching, if applicable\n            if (context.verb === \"GET\" && context.isCached) {\n                logging_1.Logger.write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Caching is enabled for request, checking cache...\", logging_1.LogLevel.Info);\n                var cacheOptions = new caching_1.CachingOptions(context.requestAbsoluteUrl.toLowerCase());\n                if (typeof context.cachingOptions !== \"undefined\") {\n                    cacheOptions = util_1.Util.extend(cacheOptions, context.cachingOptions);\n                }\n                // we may not have a valid store\n                if (cacheOptions.store !== null) {\n                    // check if we have the data in cache and if so resolve the promise and return\n                    var data = cacheOptions.store.get(cacheOptions.key);\n                    if (data !== null) {\n                        // ensure we clear any help batch dependency we are resolving from the cache\n                        logging_1.Logger.log({\n                            data: logging_1.Logger.activeLogLevel === logging_1.LogLevel.Info ? {} : data,\n                            level: logging_1.LogLevel.Info,\n                            message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Value returned from cache.\",\n                        });\n                        context.batchDependency();\n                        // handle the case where a parser needs to take special actions with a cached result (such as getAs)\n                        if (context.parser.hasOwnProperty(\"hydrate\")) {\n                            data = context.parser.hydrate(data);\n                        }\n                        return setResult(context, data).then(function (ctx) { return resolve(ctx); });\n                    }\n                }\n                logging_1.Logger.write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Value not found in cache.\", logging_1.LogLevel.Info);\n                // if we don't then wrap the supplied parser in the caching parser wrapper\n                // and send things on their way\n                context.parser = new caching_1.CachingParserWrapper(context.parser, cacheOptions);\n            }\n            return resolve(context);\n        });\n    };\n    /**\n     * Sends the request\n     */\n    PipelineMethods.send = function (context) {\n        return new Promise(function (resolve, reject) {\n            // send or batch the request\n            if (context.isBatched) {\n                // we are in a batch, so add to batch, remove dependency, and resolve with the batch's promise\n                var p = context.batch.add(context.requestAbsoluteUrl, context.verb, context.options, context.parser);\n                // we release the dependency here to ensure the batch does not execute until the request is added to the batch\n                context.batchDependency();\n                logging_1.Logger.write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Batching request in batch \" + context.batch.batchId + \".\", logging_1.LogLevel.Info);\n                // we set the result as the promise which will be resolved by the batch's execution\n                resolve(setResult(context, p));\n            }\n            else {\n                logging_1.Logger.write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Sending request.\", logging_1.LogLevel.Info);\n                // we are not part of a batch, so proceed as normal\n                var client = context.clientFactory();\n                var opts = util_1.Util.extend(context.options || {}, { method: context.verb });\n                client.fetch(context.requestAbsoluteUrl, opts)\n                    .then(function (response) { return context.parser.parse(response); })\n                    .then(function (result) { return setResult(context, result); })\n                    .then(function (ctx) { return resolve(ctx); })\n                    .catch(function (e) { return reject(e); });\n            }\n        });\n    };\n    /**\n     * Logs the end of the request\n     */\n    PipelineMethods.logEnd = function (context) {\n        return new Promise(function (resolve) {\n            if (context.isBatched) {\n                logging_1.Logger.log({\n                    data: logging_1.Logger.activeLogLevel === logging_1.LogLevel.Info ? {} : context,\n                    level: logging_1.LogLevel.Info,\n                    message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") \" + context.verb + \" request will complete in batch \" + context.batch.batchId + \".\",\n                });\n            }\n            else {\n                logging_1.Logger.log({\n                    data: logging_1.Logger.activeLogLevel === logging_1.LogLevel.Info ? {} : context,\n                    level: logging_1.LogLevel.Info,\n                    message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Completing \" + context.verb + \" request.\",\n                });\n            }\n            resolve(context);\n        });\n    };\n    Object.defineProperty(PipelineMethods, \"default\", {\n        get: function () {\n            return [\n                PipelineMethods.logStart,\n                PipelineMethods.caching,\n                PipelineMethods.send,\n                PipelineMethods.logEnd,\n            ];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    __decorate([\n        requestPipelineMethod(true)\n    ], PipelineMethods, \"logStart\", null);\n    __decorate([\n        requestPipelineMethod()\n    ], PipelineMethods, \"caching\", null);\n    __decorate([\n        requestPipelineMethod()\n    ], PipelineMethods, \"send\", null);\n    __decorate([\n        requestPipelineMethod(true)\n    ], PipelineMethods, \"logEnd\", null);\n    return PipelineMethods;\n}());\nexports.PipelineMethods = PipelineMethods;\n"},"lineCount":225}},"hash":"f9dfa7821e2661864c2708eedb29b3df","cacheData":{"env":{}}}