{"dependencies":[{"name":"C:\\Users\\Kayode\\projects\\sp-grp-mem-pnp\\package.json","includedInParent":true,"mtime":1523565340286},{"name":"C:\\Users\\Kayode\\projects\\node_modules\\sp-pnp-js\\package.json","includedInParent":true,"mtime":1523563707687},{"name":"../utils/util","loc":{"line":3,"column":21}}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"../utils/util\");\nfunction mergeOptions(target, source) {\n    target.headers = target.headers || {};\n    var headers = util_1.Util.extend(target.headers, source.headers);\n    target = util_1.Util.extend(target, source);\n    target.headers = headers;\n}\nexports.mergeOptions = mergeOptions;\nfunction mergeHeaders(target, source) {\n    if (typeof source !== \"undefined\" && source !== null) {\n        var temp = new Request(\"\", { headers: source });\n        temp.headers.forEach(function (value, name) {\n            target.append(name, value);\n        });\n    }\n}\nexports.mergeHeaders = mergeHeaders;\n","map":{"mappings":[{"source":"..\\node_modules\\sp-pnp-js\\lib\\net\\utils.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\net\\utils.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\net\\utils.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\net\\utils.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\net\\utils.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\net\\utils.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\net\\utils.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\net\\utils.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\net\\utils.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\net\\utils.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\net\\utils.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\net\\utils.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\net\\utils.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\net\\utils.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\net\\utils.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\net\\utils.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\net\\utils.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\net\\utils.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\net\\utils.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\net\\utils.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}}],"sources":{"..\\node_modules\\sp-pnp-js\\lib\\net\\utils.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"../utils/util\");\nfunction mergeOptions(target, source) {\n    target.headers = target.headers || {};\n    var headers = util_1.Util.extend(target.headers, source.headers);\n    target = util_1.Util.extend(target, source);\n    target.headers = headers;\n}\nexports.mergeOptions = mergeOptions;\nfunction mergeHeaders(target, source) {\n    if (typeof source !== \"undefined\" && source !== null) {\n        var temp = new Request(\"\", { headers: source });\n        temp.headers.forEach(function (value, name) {\n            target.append(name, value);\n        });\n    }\n}\nexports.mergeHeaders = mergeHeaders;\n"},"lineCount":20}},"hash":"a33ae7eb89ec384befc04ed049768c31","cacheData":{"env":{}}}