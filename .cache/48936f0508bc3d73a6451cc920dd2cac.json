{"dependencies":[{"name":"C:\\Users\\Kayode\\projects\\sp-grp-mem-pnp\\package.json","includedInParent":true,"mtime":1523565340286},{"name":"C:\\Users\\Kayode\\projects\\node_modules\\sp-pnp-js\\package.json","includedInParent":true,"mtime":1523563707687},{"name":"../utils/exceptions","loc":{"line":3,"column":27}},{"name":"../utils/logging","loc":{"line":4,"column":24}}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar exceptions_1 = require(\"../utils/exceptions\");\nvar logging_1 = require(\"../utils/logging\");\nvar ODataParserBase = /** @class */ (function () {\n    function ODataParserBase() {\n    }\n    ODataParserBase.prototype.parse = function (r) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            if (_this.handleError(r, reject)) {\n                if ((r.headers.has(\"Content-Length\") && parseFloat(r.headers.get(\"Content-Length\")) === 0) || r.status === 204) {\n                    resolve({});\n                }\n                else {\n                    // patch to handle cases of 200 response with no or whitespace only bodies (#487 & #545)\n                    r.text()\n                        .then(function (txt) { return txt.replace(/\\s/ig, \"\").length > 0 ? JSON.parse(txt) : {}; })\n                        .then(function (json) { return resolve(_this.parseODataJSON(json)); })\n                        .catch(function (e) { return reject(e); });\n                }\n            }\n        });\n    };\n    ODataParserBase.prototype.handleError = function (r, reject) {\n        if (!r.ok) {\n            r.json().then(function (json) {\n                // include the headers as they contain diagnostic information\n                var data = {\n                    responseBody: json,\n                    responseHeaders: r.headers,\n                };\n                reject(new exceptions_1.ProcessHttpClientResponseException(r.status, r.statusText, data));\n            }).catch(function (e) {\n                // we failed to read the body - possibly it is empty. Let's report the original status that caused\n                // the request to fail and log the error with parsing the body if anyone needs it for debugging\n                logging_1.Logger.log({\n                    data: e,\n                    level: logging_1.LogLevel.Warning,\n                    message: \"There was an error parsing the error response body. See data for details.\",\n                });\n                // include the headers as they contain diagnostic information\n                var data = {\n                    responseBody: \"[[body not available]]\",\n                    responseHeaders: r.headers,\n                };\n                reject(new exceptions_1.ProcessHttpClientResponseException(r.status, r.statusText, data));\n            });\n        }\n        return r.ok;\n    };\n    ODataParserBase.prototype.parseODataJSON = function (json) {\n        var result = json;\n        if (json.hasOwnProperty(\"d\")) {\n            if (json.d.hasOwnProperty(\"results\")) {\n                result = json.d.results;\n            }\n            else {\n                result = json.d;\n            }\n        }\n        else if (json.hasOwnProperty(\"value\")) {\n            result = json.value;\n        }\n        return result;\n    };\n    return ODataParserBase;\n}());\nexports.ODataParserBase = ODataParserBase;\n","map":{"mappings":[{"source":"..\\node_modules\\sp-pnp-js\\lib\\odata\\core.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\odata\\core.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\odata\\core.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\odata\\core.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\odata\\core.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\odata\\core.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\odata\\core.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\odata\\core.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\odata\\core.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\odata\\core.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\odata\\core.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\odata\\core.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\odata\\core.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\odata\\core.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\odata\\core.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\odata\\core.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\odata\\core.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\odata\\core.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\odata\\core.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\odata\\core.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\odata\\core.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\odata\\core.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\odata\\core.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\odata\\core.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\odata\\core.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\odata\\core.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\odata\\core.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\odata\\core.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\odata\\core.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\odata\\core.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\odata\\core.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\odata\\core.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\odata\\core.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\odata\\core.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\odata\\core.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\odata\\core.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\odata\\core.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\odata\\core.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\odata\\core.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\odata\\core.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\odata\\core.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\odata\\core.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\odata\\core.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\odata\\core.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\odata\\core.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\odata\\core.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\odata\\core.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\odata\\core.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\odata\\core.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\odata\\core.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\odata\\core.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\odata\\core.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\odata\\core.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\odata\\core.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\odata\\core.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\odata\\core.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\odata\\core.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\odata\\core.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\odata\\core.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\odata\\core.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\odata\\core.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\odata\\core.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\odata\\core.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\odata\\core.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\odata\\core.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\odata\\core.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\odata\\core.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\odata\\core.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\odata\\core.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"..\\node_modules\\sp-pnp-js\\lib\\odata\\core.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}}],"sources":{"..\\node_modules\\sp-pnp-js\\lib\\odata\\core.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar exceptions_1 = require(\"../utils/exceptions\");\nvar logging_1 = require(\"../utils/logging\");\nvar ODataParserBase = /** @class */ (function () {\n    function ODataParserBase() {\n    }\n    ODataParserBase.prototype.parse = function (r) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            if (_this.handleError(r, reject)) {\n                if ((r.headers.has(\"Content-Length\") && parseFloat(r.headers.get(\"Content-Length\")) === 0) || r.status === 204) {\n                    resolve({});\n                }\n                else {\n                    // patch to handle cases of 200 response with no or whitespace only bodies (#487 & #545)\n                    r.text()\n                        .then(function (txt) { return txt.replace(/\\s/ig, \"\").length > 0 ? JSON.parse(txt) : {}; })\n                        .then(function (json) { return resolve(_this.parseODataJSON(json)); })\n                        .catch(function (e) { return reject(e); });\n                }\n            }\n        });\n    };\n    ODataParserBase.prototype.handleError = function (r, reject) {\n        if (!r.ok) {\n            r.json().then(function (json) {\n                // include the headers as they contain diagnostic information\n                var data = {\n                    responseBody: json,\n                    responseHeaders: r.headers,\n                };\n                reject(new exceptions_1.ProcessHttpClientResponseException(r.status, r.statusText, data));\n            }).catch(function (e) {\n                // we failed to read the body - possibly it is empty. Let's report the original status that caused\n                // the request to fail and log the error with parsing the body if anyone needs it for debugging\n                logging_1.Logger.log({\n                    data: e,\n                    level: logging_1.LogLevel.Warning,\n                    message: \"There was an error parsing the error response body. See data for details.\",\n                });\n                // include the headers as they contain diagnostic information\n                var data = {\n                    responseBody: \"[[body not available]]\",\n                    responseHeaders: r.headers,\n                };\n                reject(new exceptions_1.ProcessHttpClientResponseException(r.status, r.statusText, data));\n            });\n        }\n        return r.ok;\n    };\n    ODataParserBase.prototype.parseODataJSON = function (json) {\n        var result = json;\n        if (json.hasOwnProperty(\"d\")) {\n            if (json.d.hasOwnProperty(\"results\")) {\n                result = json.d.results;\n            }\n            else {\n                result = json.d;\n            }\n        }\n        else if (json.hasOwnProperty(\"value\")) {\n            result = json.value;\n        }\n        return result;\n    };\n    return ODataParserBase;\n}());\nexports.ODataParserBase = ODataParserBase;\n"},"lineCount":70}},"hash":"78899cf8d1ab9f77200ea068a3872bc1","cacheData":{"env":{}}}