{"dependencies":[{"name":"C:\\Users\\Kayode\\projects\\sp-grp-mem-pnp\\package.json","includedInParent":true,"mtime":1523565871379},{"name":"C:\\Users\\Kayode\\projects\\sp-grp-mem-pnp\\node_modules\\sp-pnp-js\\package.json","includedInParent":true,"mtime":1523565871344},{"name":"./digestcache","loc":{"line":3,"column":28}},{"name":"../utils/util","loc":{"line":4,"column":21}},{"name":"../configuration/pnplibconfig","loc":{"line":5,"column":29}},{"name":"../utils/exceptions","loc":{"line":6,"column":27}},{"name":"./utils","loc":{"line":7,"column":22}}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar digestcache_1 = require(\"./digestcache\");\nvar util_1 = require(\"../utils/util\");\nvar pnplibconfig_1 = require(\"../configuration/pnplibconfig\");\nvar exceptions_1 = require(\"../utils/exceptions\");\nvar utils_1 = require(\"./utils\");\nvar HttpClient = /** @class */ (function () {\n    function HttpClient() {\n        this._impl = pnplibconfig_1.RuntimeConfig.spFetchClientFactory();\n        this._digestCache = new digestcache_1.DigestCache(this);\n    }\n    HttpClient.prototype.fetch = function (url, options) {\n        var _this = this;\n        if (options === void 0) { options = {}; }\n        var opts = util_1.Util.extend(options, { cache: \"no-cache\", credentials: \"same-origin\" }, true);\n        var headers = new Headers();\n        // first we add the global headers so they can be overwritten by any passed in locally to this call\n        utils_1.mergeHeaders(headers, pnplibconfig_1.RuntimeConfig.spHeaders);\n        // second we add the local options so we can overwrite the globals\n        utils_1.mergeHeaders(headers, options.headers);\n        // lastly we apply any default headers we need that may not exist\n        if (!headers.has(\"Accept\")) {\n            headers.append(\"Accept\", \"application/json\");\n        }\n        if (!headers.has(\"Content-Type\")) {\n            headers.append(\"Content-Type\", \"application/json;odata=verbose;charset=utf-8\");\n        }\n        if (!headers.has(\"X-ClientService-ClientTag\")) {\n            headers.append(\"X-ClientService-ClientTag\", \"PnPCoreJS:3.0.7\");\n        }\n        if (!headers.has(\"User-Agent\")) {\n            // this marks the requests for understanding by the service\n            headers.append(\"User-Agent\", \"NONISV|SharePointPnP|PnPCoreJS/3.0.7\");\n        }\n        opts = util_1.Util.extend(opts, { headers: headers });\n        if (opts.method && opts.method.toUpperCase() !== \"GET\") {\n            // if we have either a request digest or an authorization header we don't need a digest\n            if (!headers.has(\"X-RequestDigest\") && !headers.has(\"Authorization\")) {\n                var index = url.indexOf(\"_api/\");\n                if (index < 0) {\n                    throw new exceptions_1.APIUrlException();\n                }\n                var webUrl = url.substr(0, index);\n                return this._digestCache.getDigest(webUrl)\n                    .then(function (digest) {\n                    headers.append(\"X-RequestDigest\", digest);\n                    return _this.fetchRaw(url, opts);\n                });\n            }\n        }\n        return this.fetchRaw(url, opts);\n    };\n    HttpClient.prototype.fetchRaw = function (url, options) {\n        var _this = this;\n        if (options === void 0) { options = {}; }\n        // here we need to normalize the headers\n        var rawHeaders = new Headers();\n        utils_1.mergeHeaders(rawHeaders, options.headers);\n        options = util_1.Util.extend(options, { headers: rawHeaders });\n        var retry = function (ctx) {\n            _this._impl.fetch(url, options).then(function (response) { return ctx.resolve(response); }).catch(function (response) {\n                // Check if request was throttled - http status code 429\n                // Check if request failed due to server unavailable - http status code 503\n                if (response.status !== 429 && response.status !== 503) {\n                    ctx.reject(response);\n                }\n                // grab our current delay\n                var delay = ctx.delay;\n                // Increment our counters.\n                ctx.delay *= 2;\n                ctx.attempts++;\n                // If we have exceeded the retry count, reject.\n                if (ctx.retryCount <= ctx.attempts) {\n                    ctx.reject(response);\n                }\n                // Set our retry timeout for {delay} milliseconds.\n                setTimeout(util_1.Util.getCtxCallback(_this, retry, ctx), delay);\n            });\n        };\n        return new Promise(function (resolve, reject) {\n            var retryContext = {\n                attempts: 0,\n                delay: 100,\n                reject: reject,\n                resolve: resolve,\n                retryCount: 7,\n            };\n            retry.call(_this, retryContext);\n        });\n    };\n    HttpClient.prototype.get = function (url, options) {\n        if (options === void 0) { options = {}; }\n        var opts = util_1.Util.extend(options, { method: \"GET\" });\n        return this.fetch(url, opts);\n    };\n    HttpClient.prototype.post = function (url, options) {\n        if (options === void 0) { options = {}; }\n        var opts = util_1.Util.extend(options, { method: \"POST\" });\n        return this.fetch(url, opts);\n    };\n    HttpClient.prototype.patch = function (url, options) {\n        if (options === void 0) { options = {}; }\n        var opts = util_1.Util.extend(options, { method: \"PATCH\" });\n        return this.fetch(url, opts);\n    };\n    HttpClient.prototype.delete = function (url, options) {\n        if (options === void 0) { options = {}; }\n        var opts = util_1.Util.extend(options, { method: \"DELETE\" });\n        return this.fetch(url, opts);\n    };\n    return HttpClient;\n}());\nexports.HttpClient = HttpClient;\n","map":{"mappings":[{"source":"node_modules\\sp-pnp-js\\lib\\net\\httpclient.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\net\\httpclient.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\net\\httpclient.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\net\\httpclient.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\net\\httpclient.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\net\\httpclient.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\net\\httpclient.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\net\\httpclient.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\net\\httpclient.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\net\\httpclient.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\net\\httpclient.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\net\\httpclient.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\net\\httpclient.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\net\\httpclient.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\net\\httpclient.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\net\\httpclient.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\net\\httpclient.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\net\\httpclient.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\net\\httpclient.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\net\\httpclient.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\net\\httpclient.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\net\\httpclient.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\net\\httpclient.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\net\\httpclient.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\net\\httpclient.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\net\\httpclient.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\net\\httpclient.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\net\\httpclient.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\net\\httpclient.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\net\\httpclient.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\net\\httpclient.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\net\\httpclient.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\net\\httpclient.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\net\\httpclient.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\net\\httpclient.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\net\\httpclient.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\net\\httpclient.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\net\\httpclient.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\net\\httpclient.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\net\\httpclient.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\net\\httpclient.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\net\\httpclient.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\net\\httpclient.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\net\\httpclient.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\net\\httpclient.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\net\\httpclient.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\net\\httpclient.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\net\\httpclient.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\net\\httpclient.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\net\\httpclient.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\net\\httpclient.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\net\\httpclient.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\net\\httpclient.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\net\\httpclient.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\net\\httpclient.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\net\\httpclient.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\net\\httpclient.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\net\\httpclient.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\net\\httpclient.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\net\\httpclient.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\net\\httpclient.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\net\\httpclient.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\net\\httpclient.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\net\\httpclient.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\net\\httpclient.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\net\\httpclient.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\net\\httpclient.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\net\\httpclient.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\net\\httpclient.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\net\\httpclient.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\net\\httpclient.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\net\\httpclient.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\net\\httpclient.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\net\\httpclient.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\net\\httpclient.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\net\\httpclient.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\net\\httpclient.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\net\\httpclient.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\net\\httpclient.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\net\\httpclient.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\net\\httpclient.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\net\\httpclient.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\net\\httpclient.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\net\\httpclient.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\net\\httpclient.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\net\\httpclient.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\net\\httpclient.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\net\\httpclient.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\net\\httpclient.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\net\\httpclient.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\net\\httpclient.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\net\\httpclient.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\net\\httpclient.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\net\\httpclient.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\net\\httpclient.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\net\\httpclient.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\net\\httpclient.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\net\\httpclient.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\net\\httpclient.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\net\\httpclient.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\net\\httpclient.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\net\\httpclient.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\net\\httpclient.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\net\\httpclient.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\net\\httpclient.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\net\\httpclient.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\net\\httpclient.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\net\\httpclient.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\net\\httpclient.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\net\\httpclient.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\net\\httpclient.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\net\\httpclient.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\net\\httpclient.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\net\\httpclient.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\net\\httpclient.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}}],"sources":{"node_modules\\sp-pnp-js\\lib\\net\\httpclient.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar digestcache_1 = require(\"./digestcache\");\nvar util_1 = require(\"../utils/util\");\nvar pnplibconfig_1 = require(\"../configuration/pnplibconfig\");\nvar exceptions_1 = require(\"../utils/exceptions\");\nvar utils_1 = require(\"./utils\");\nvar HttpClient = /** @class */ (function () {\n    function HttpClient() {\n        this._impl = pnplibconfig_1.RuntimeConfig.spFetchClientFactory();\n        this._digestCache = new digestcache_1.DigestCache(this);\n    }\n    HttpClient.prototype.fetch = function (url, options) {\n        var _this = this;\n        if (options === void 0) { options = {}; }\n        var opts = util_1.Util.extend(options, { cache: \"no-cache\", credentials: \"same-origin\" }, true);\n        var headers = new Headers();\n        // first we add the global headers so they can be overwritten by any passed in locally to this call\n        utils_1.mergeHeaders(headers, pnplibconfig_1.RuntimeConfig.spHeaders);\n        // second we add the local options so we can overwrite the globals\n        utils_1.mergeHeaders(headers, options.headers);\n        // lastly we apply any default headers we need that may not exist\n        if (!headers.has(\"Accept\")) {\n            headers.append(\"Accept\", \"application/json\");\n        }\n        if (!headers.has(\"Content-Type\")) {\n            headers.append(\"Content-Type\", \"application/json;odata=verbose;charset=utf-8\");\n        }\n        if (!headers.has(\"X-ClientService-ClientTag\")) {\n            headers.append(\"X-ClientService-ClientTag\", \"PnPCoreJS:3.0.7\");\n        }\n        if (!headers.has(\"User-Agent\")) {\n            // this marks the requests for understanding by the service\n            headers.append(\"User-Agent\", \"NONISV|SharePointPnP|PnPCoreJS/3.0.7\");\n        }\n        opts = util_1.Util.extend(opts, { headers: headers });\n        if (opts.method && opts.method.toUpperCase() !== \"GET\") {\n            // if we have either a request digest or an authorization header we don't need a digest\n            if (!headers.has(\"X-RequestDigest\") && !headers.has(\"Authorization\")) {\n                var index = url.indexOf(\"_api/\");\n                if (index < 0) {\n                    throw new exceptions_1.APIUrlException();\n                }\n                var webUrl = url.substr(0, index);\n                return this._digestCache.getDigest(webUrl)\n                    .then(function (digest) {\n                    headers.append(\"X-RequestDigest\", digest);\n                    return _this.fetchRaw(url, opts);\n                });\n            }\n        }\n        return this.fetchRaw(url, opts);\n    };\n    HttpClient.prototype.fetchRaw = function (url, options) {\n        var _this = this;\n        if (options === void 0) { options = {}; }\n        // here we need to normalize the headers\n        var rawHeaders = new Headers();\n        utils_1.mergeHeaders(rawHeaders, options.headers);\n        options = util_1.Util.extend(options, { headers: rawHeaders });\n        var retry = function (ctx) {\n            _this._impl.fetch(url, options).then(function (response) { return ctx.resolve(response); }).catch(function (response) {\n                // Check if request was throttled - http status code 429\n                // Check if request failed due to server unavailable - http status code 503\n                if (response.status !== 429 && response.status !== 503) {\n                    ctx.reject(response);\n                }\n                // grab our current delay\n                var delay = ctx.delay;\n                // Increment our counters.\n                ctx.delay *= 2;\n                ctx.attempts++;\n                // If we have exceeded the retry count, reject.\n                if (ctx.retryCount <= ctx.attempts) {\n                    ctx.reject(response);\n                }\n                // Set our retry timeout for {delay} milliseconds.\n                setTimeout(util_1.Util.getCtxCallback(_this, retry, ctx), delay);\n            });\n        };\n        return new Promise(function (resolve, reject) {\n            var retryContext = {\n                attempts: 0,\n                delay: 100,\n                reject: reject,\n                resolve: resolve,\n                retryCount: 7,\n            };\n            retry.call(_this, retryContext);\n        });\n    };\n    HttpClient.prototype.get = function (url, options) {\n        if (options === void 0) { options = {}; }\n        var opts = util_1.Util.extend(options, { method: \"GET\" });\n        return this.fetch(url, opts);\n    };\n    HttpClient.prototype.post = function (url, options) {\n        if (options === void 0) { options = {}; }\n        var opts = util_1.Util.extend(options, { method: \"POST\" });\n        return this.fetch(url, opts);\n    };\n    HttpClient.prototype.patch = function (url, options) {\n        if (options === void 0) { options = {}; }\n        var opts = util_1.Util.extend(options, { method: \"PATCH\" });\n        return this.fetch(url, opts);\n    };\n    HttpClient.prototype.delete = function (url, options) {\n        if (options === void 0) { options = {}; }\n        var opts = util_1.Util.extend(options, { method: \"DELETE\" });\n        return this.fetch(url, opts);\n    };\n    return HttpClient;\n}());\nexports.HttpClient = HttpClient;\n"},"lineCount":115}},"hash":"3b9d8ac2422c4d6ef4c126a7e157b36c","cacheData":{"env":{}}}