{"dependencies":[{"name":"C:\\Users\\Kayode\\projects\\sp-grp-mem-pnp\\package.json","includedInParent":true,"mtime":1523565871379},{"name":"C:\\Users\\Kayode\\projects\\sp-grp-mem-pnp\\node_modules\\sp-pnp-js\\package.json","includedInParent":true,"mtime":1523565871344}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Generic dictionary\n */\nvar Dictionary = /** @class */ (function () {\n    /**\n     * Creates a new instance of the Dictionary<T> class\n     *\n     * @constructor\n     */\n    function Dictionary(keys, values) {\n        if (keys === void 0) { keys = []; }\n        if (values === void 0) { values = []; }\n        this.keys = keys;\n        this.values = values;\n    }\n    /**\n     * Gets a value from the collection using the specified key\n     *\n     * @param key The key whose value we want to return, returns null if the key does not exist\n     */\n    Dictionary.prototype.get = function (key) {\n        var index = this.keys.indexOf(key);\n        if (index < 0) {\n            return null;\n        }\n        return this.values[index];\n    };\n    /**\n     * Adds the supplied key and value to the dictionary\n     *\n     * @param key The key to add\n     * @param o The value to add\n     */\n    Dictionary.prototype.add = function (key, o) {\n        var index = this.keys.indexOf(key);\n        if (index > -1) {\n            this.values[index] = o;\n        }\n        else {\n            this.keys.push(key);\n            this.values.push(o);\n        }\n    };\n    /**\n     * Merges the supplied typed hash into this dictionary instance. Existing values are updated and new ones are created as appropriate.\n     */\n    Dictionary.prototype.merge = function (source) {\n        var _this = this;\n        if (\"getKeys\" in source) {\n            var sourceAsDictionary_1 = source;\n            sourceAsDictionary_1.getKeys().map(function (key) {\n                _this.add(key, sourceAsDictionary_1.get(key));\n            });\n        }\n        else {\n            var sourceAsHash = source;\n            for (var key in sourceAsHash) {\n                if (sourceAsHash.hasOwnProperty(key)) {\n                    this.add(key, sourceAsHash[key]);\n                }\n            }\n        }\n    };\n    /**\n     * Removes a value from the dictionary\n     *\n     * @param key The key of the key/value pair to remove. Returns null if the key was not found.\n     */\n    Dictionary.prototype.remove = function (key) {\n        var index = this.keys.indexOf(key);\n        if (index < 0) {\n            return null;\n        }\n        var val = this.values[index];\n        this.keys.splice(index, 1);\n        this.values.splice(index, 1);\n        return val;\n    };\n    /**\n     * Returns all the keys currently in the dictionary as an array\n     */\n    Dictionary.prototype.getKeys = function () {\n        return this.keys;\n    };\n    /**\n     * Returns all the values currently in the dictionary as an array\n     */\n    Dictionary.prototype.getValues = function () {\n        return this.values;\n    };\n    /**\n     * Clears the current dictionary\n     */\n    Dictionary.prototype.clear = function () {\n        this.keys = [];\n        this.values = [];\n    };\n    /**\n     * Gets a count of the items currently in the dictionary\n     */\n    Dictionary.prototype.count = function () {\n        return this.keys.length;\n    };\n    return Dictionary;\n}());\nexports.Dictionary = Dictionary;\n","map":{"mappings":[{"source":"node_modules\\sp-pnp-js\\lib\\collections\\collections.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\collections\\collections.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\collections\\collections.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\collections\\collections.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\collections\\collections.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\collections\\collections.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\collections\\collections.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\collections\\collections.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\collections\\collections.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\collections\\collections.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\collections\\collections.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\collections\\collections.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\collections\\collections.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\collections\\collections.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\collections\\collections.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\collections\\collections.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\collections\\collections.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\collections\\collections.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\collections\\collections.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\collections\\collections.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\collections\\collections.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\collections\\collections.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\collections\\collections.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\collections\\collections.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\collections\\collections.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\collections\\collections.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\collections\\collections.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\collections\\collections.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\collections\\collections.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\collections\\collections.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\collections\\collections.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\collections\\collections.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\collections\\collections.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\collections\\collections.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\collections\\collections.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\collections\\collections.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\collections\\collections.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\collections\\collections.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\collections\\collections.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\collections\\collections.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\collections\\collections.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\collections\\collections.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\collections\\collections.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\collections\\collections.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\collections\\collections.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\collections\\collections.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\collections\\collections.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\collections\\collections.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\collections\\collections.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\collections\\collections.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\collections\\collections.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\collections\\collections.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\collections\\collections.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\collections\\collections.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\collections\\collections.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\collections\\collections.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\collections\\collections.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\collections\\collections.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\collections\\collections.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\collections\\collections.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\collections\\collections.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\collections\\collections.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\collections\\collections.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\collections\\collections.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\collections\\collections.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\collections\\collections.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\collections\\collections.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\collections\\collections.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\collections\\collections.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\collections\\collections.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\collections\\collections.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\collections\\collections.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\collections\\collections.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\collections\\collections.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\collections\\collections.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\collections\\collections.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\collections\\collections.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\collections\\collections.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\collections\\collections.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\collections\\collections.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\collections\\collections.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\collections\\collections.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\collections\\collections.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\collections\\collections.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\collections\\collections.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\collections\\collections.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\collections\\collections.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\collections\\collections.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\collections\\collections.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\collections\\collections.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\collections\\collections.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\collections\\collections.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\collections\\collections.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\collections\\collections.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\collections\\collections.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\collections\\collections.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\collections\\collections.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\collections\\collections.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\collections\\collections.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\collections\\collections.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\collections\\collections.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\collections\\collections.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\collections\\collections.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\collections\\collections.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\collections\\collections.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\collections\\collections.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\collections\\collections.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\collections\\collections.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules\\sp-pnp-js\\lib\\collections\\collections.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}}],"sources":{"node_modules\\sp-pnp-js\\lib\\collections\\collections.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Generic dictionary\n */\nvar Dictionary = /** @class */ (function () {\n    /**\n     * Creates a new instance of the Dictionary<T> class\n     *\n     * @constructor\n     */\n    function Dictionary(keys, values) {\n        if (keys === void 0) { keys = []; }\n        if (values === void 0) { values = []; }\n        this.keys = keys;\n        this.values = values;\n    }\n    /**\n     * Gets a value from the collection using the specified key\n     *\n     * @param key The key whose value we want to return, returns null if the key does not exist\n     */\n    Dictionary.prototype.get = function (key) {\n        var index = this.keys.indexOf(key);\n        if (index < 0) {\n            return null;\n        }\n        return this.values[index];\n    };\n    /**\n     * Adds the supplied key and value to the dictionary\n     *\n     * @param key The key to add\n     * @param o The value to add\n     */\n    Dictionary.prototype.add = function (key, o) {\n        var index = this.keys.indexOf(key);\n        if (index > -1) {\n            this.values[index] = o;\n        }\n        else {\n            this.keys.push(key);\n            this.values.push(o);\n        }\n    };\n    /**\n     * Merges the supplied typed hash into this dictionary instance. Existing values are updated and new ones are created as appropriate.\n     */\n    Dictionary.prototype.merge = function (source) {\n        var _this = this;\n        if (\"getKeys\" in source) {\n            var sourceAsDictionary_1 = source;\n            sourceAsDictionary_1.getKeys().map(function (key) {\n                _this.add(key, sourceAsDictionary_1.get(key));\n            });\n        }\n        else {\n            var sourceAsHash = source;\n            for (var key in sourceAsHash) {\n                if (sourceAsHash.hasOwnProperty(key)) {\n                    this.add(key, sourceAsHash[key]);\n                }\n            }\n        }\n    };\n    /**\n     * Removes a value from the dictionary\n     *\n     * @param key The key of the key/value pair to remove. Returns null if the key was not found.\n     */\n    Dictionary.prototype.remove = function (key) {\n        var index = this.keys.indexOf(key);\n        if (index < 0) {\n            return null;\n        }\n        var val = this.values[index];\n        this.keys.splice(index, 1);\n        this.values.splice(index, 1);\n        return val;\n    };\n    /**\n     * Returns all the keys currently in the dictionary as an array\n     */\n    Dictionary.prototype.getKeys = function () {\n        return this.keys;\n    };\n    /**\n     * Returns all the values currently in the dictionary as an array\n     */\n    Dictionary.prototype.getValues = function () {\n        return this.values;\n    };\n    /**\n     * Clears the current dictionary\n     */\n    Dictionary.prototype.clear = function () {\n        this.keys = [];\n        this.values = [];\n    };\n    /**\n     * Gets a count of the items currently in the dictionary\n     */\n    Dictionary.prototype.count = function () {\n        return this.keys.length;\n    };\n    return Dictionary;\n}());\nexports.Dictionary = Dictionary;\n"},"lineCount":109}},"hash":"b3c2e7e05c5903c6859717d04d8ecadb","cacheData":{"env":{}}}